{"version":3,"sources":["LiveUpdating.js","Container.js","index.js"],"names":["LiveUpdating","props","interval","clearInterval","this","bb","d3","node","getBoundingClientRect","xScale","domain","range","width","yScale","height","data","Array","fill","map","Math","random","svg","append","attr","line","curve","x","_","i","y","d","setInterval","pop","unshift","selectAll","id","style","Component","AppContainer","React","ReactDOM","render","document","getElementById"],"mappings":"8PAGqBA,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,SAAW,KAFC,E,oFAMjBC,cAAcC,KAAKF,Y,0CAInB,IAAMG,EAAKC,IAAA,UAAoBC,OAAOC,wBAEhCC,EAASH,MACZI,OAAO,CAAC,EAAG,MACXC,MAAM,CAAC,EAAGN,EAAGO,QAEVC,EAASP,MACZI,OAAO,CAAC,EAAG,KACXC,MAAM,CAACN,EAAGS,OAAQ,IAEfC,EAAO,IAAIC,MAAM,KACpBC,KAAK,GACLC,KAAI,kBAAoB,GAAdC,KAAKC,YAEZC,EAAMf,IAAU,UACnBgB,OAAO,OACPC,KAAK,KAAM,OACXA,KAAK,QAAS,QACdA,KAAK,SAAU,QAEZC,EAAOlB,MACVmB,MAAMnB,KACNoB,GAAE,SAACC,EAAGC,GAAJ,OAAUnB,EAAOmB,MACnBC,GAAE,SAACC,GAAD,OAAOjB,EAAOiB,MAEnBT,EAAIC,OAAO,QACRC,KAAK,IAAKC,EAAKT,IAElBX,KAAKF,SAAW6B,aAAY,WAC1BhB,EAAKiB,MACLjB,EAAKkB,QAAsB,GAAdd,KAAKC,UAElBC,EAAIa,UAAU,QACXnB,KAAK,CAACA,IACNQ,KAAK,IAAKC,KACZ,M,+BAIH,OACE,yBAAKW,GAAG,QAAQC,MAAO,CAACxB,MAAO,QAASE,OAAQ,e,GAnDZuB,aCCrBC,E,iLAEjB,OACE,kBAAC,EAAD,U,GAHoCC,IAAMF,W,MCEhDG,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.bea0a558.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3';\n\nexport default class LiveUpdating extends Component {\n  constructor(props) {\n    super(props);\n    this.interval = null;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  componentDidMount() {\n    const bb = d3.select(`#graph`).node().getBoundingClientRect();\n\n    const xScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([0, bb.width]);\n    \n    const yScale = d3.scaleLinear()\n      .domain([0, 10])\n      .range([bb.height, 0]);\n\n    const data = new Array(100)\n      .fill(0)\n      .map(() => Math.random()*10);\n  \n    const svg = d3.select('#graph')\n      .append('svg')\n      .attr('id', 'svg')\n      .attr('width', '100%')\n      .attr('height', '100%');\n    \n    const line = d3.line()\n      .curve(d3.curveBasis)\n      .x((_, i) => xScale(i))\n      .y((d) => yScale(d))\n    \n    svg.append('path')\n      .attr('d', line(data))\n    \n    this.interval = setInterval(() => {\n      data.pop();\n      data.unshift(Math.random()*10);\n\n      svg.selectAll('path')\n        .data([data])\n        .attr('d', line)\n    }, 50);\n  }\n\n  render() {\n    return (\n      <div id=\"graph\" style={{width: '100vw', height: '100vh'}}>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport LiveUpdating from './LiveUpdating';\n\nexport default class AppContainer extends React.Component {\n  render() {\n    return (\n      <LiveUpdating />\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Container from './Container';\n\nimport './index.css';\n\nReactDOM.render(<Container />, document.getElementById('root'));\n"],"sourceRoot":""}