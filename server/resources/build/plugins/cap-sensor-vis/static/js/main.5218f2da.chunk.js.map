{"version":3,"sources":["app.js","index.js"],"names":["TimedFunction","time","func","this","start","Date","now","App","props","state","capacitance","noise","speed","readings","saturation","animation","width","height","pointSpacing","maxReadings","svg","text","line","stop","bind","restart","read","volts","readSensor","updateVolts","graphReadings","graphSensor","svgg","document","getElementById","parentNode","removeChild","svgs","loop","window","cancelAnimationFrame","bb","d3","node","getBoundingClientRect","append","attr","rect","on","x","offsetX","xp","y","yp","curve","d","prevReading","length","h","Math","random","py","dif","abs","i","reading","shift","push","createReading","selectAll","data","t","toFixed","requestAnimationFrame","update","setTime","execute","className","onClick","setState","id","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5218f2da.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3';\n\nclass TimedFunction {\n  constructor(time, func) {\n    this.func = func;\n    this.time = time;\n    this.start = Date.now();\n  }\n\n  execute() {\n    if (Date.now() - this.start >= this.time) {\n      this.start = Date.now();\n      this.func();\n    }\n  }\n\n  setTime(time) {\n    this.time = time;\n  }\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      capacitance: 5,\n      noise: 5,\n      speed: 10\n    };\n    this.readings = [];\n    this.saturation = 0;\n    this.animation = null;\n    this.width = null;\n    this.height = null;\n    this.pointSpacing = null;\n    this.maxReadings = null;\n    this.svg = null;\n    this.text = null;\n    this.line = null;\n    this.stop = this.stop.bind(this);\n    this.start = this.start.bind(this);\n    this.restart = this.restart.bind(this);\n    this.read = this.read.bind(this);\n    this.volts = this.volts.bind(this);\n    this.readSensor = new TimedFunction(this.state.speed, this.read);\n    this.updateVolts = new TimedFunction(100, this.volts);\n  }\n\n  componentDidMount() {\n    this.graphReadings();\n    this.graphSensor();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  restart() {\n    this.stop();\n    this.readings = [];\n    const svgg = document.getElementById('svgg');\n    if (svgg) {\n      svgg.parentNode.removeChild(svgg);\n    }\n    const svgs = document.getElementById('svgs');\n    if (svgs) {\n      svgs.parentNode.removeChild(svgs);\n    }\n    this.graphReadings();\n    this.graphSensor();\n  }\n\n  start() {\n    if(this.animation === null) { this.loop(); } \n  }\n\n  stop() {\n    if (this.animation === null) { return; }\n    window.cancelAnimationFrame(this.animation);\n    this.animation = null;\n  }\n\n  graphSensor() {\n    const bb = d3.select(`#sensor`).node().getBoundingClientRect();\n    const width = bb.width;\n    const height = bb.height;\n\n    const svg = d3.select(`#sensor`)\n      .append(\"svg\")\n      .attr('id', 'svgs')\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const rect = svg.append('rect')\n      .attr('fill', `#00cc99`)\n      .attr('width', 0)\n      .attr('height', height)\n      .attr('x', 0)\n      .attr('y', 0);\n\n    svg.append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"opacity\", 0)\n      .on(\"mousemove\", () => {\n        const x = d3.event.offsetX;\n        rect.attr(\"width\", x);\n        this.saturation = x / width;\n      });\n  }\n\n  graphReadings() {\n    const bb = d3.select(`#graph`).node().getBoundingClientRect();\n    this.width = bb.width;\n    this.height = bb.height;\n    this.pointSpacing = 20;\n    this.maxReadings = (this.width / this.pointSpacing) + 1;\n\n    this.svg = d3.select('#graph')\n      .append('svg')\n      .attr('id', 'svgg')\n      .attr('width', '100%')\n      .attr('height', '100%');\n\n    this.svg.append('rect')\n      .attr('fill', '#ffffff')\n      .attr('width', this.width)\n      .attr('height', 2)\n      .attr('x', 0)\n      .attr('y', this.height/2);\n    \n    for (let x = 1; x < this.width; x++) {\n      let xp = x*this.pointSpacing;\n      if (xp > this.width) {\n        break;\n      }\n\n      this.svg.append('rect')\n      .attr('fill', '#ffffff')\n      .attr('opacity', '0.2')\n      .attr('width', 1)\n      .attr('height', this.height)\n      .attr('x', xp)\n      .attr('y', 0);\n    }\n\n    for (let y = 1; y < this.height; y++) {\n      let yp = y*this.pointSpacing;\n      if (yp > this.height) {\n        break;\n      }\n\n      this.svg.append('rect')\n      .attr('fill', '#ffffff')\n      .attr('opacity', '0.2')\n      .attr('width', this.width)\n      .attr('height', 1)\n      .attr('x', 0)\n      .attr('y', yp);\n    }\n\n    this.svg.append('text')\n      .attr('fill', '#ffffff')\n      .attr('x', 5)\n      .attr('y', 20)\n      .text(\"Cool Oscilloscope Simulation Â®\")\n    \n    this.text = this.svg.append('text')\n      .attr('fill', '#ffffff')\n      .attr('x', 5)\n      .attr('y', 40)\n      .text('')\n\n    this.line = d3.line()\n      .curve(d3.curveBasis)\n      .x((d) => d.x)\n      .y((d) => d.y)\n    \n    this.svg.append(\"svg:path\")\n      .attr(\"d\", this.line(this.readings))\n  }\n\n  createReading() {\n    const { capacitance, noise } = this.state;\n    const prevReading = this.readings[this.readings.length-1];\n    const h = this.height-this.height*0.1\n    const rand = Math.random()*((this.height/8)*(noise/100));\n    const sat = this.saturation*(h-this.height*0.1);\n    let y = h + rand - sat;\n\n    if (prevReading) {\n      let py = prevReading.y;\n      let dif = Math.abs(py-y);\n      dif -= dif*(capacitance/100);\n      if (py-y < 0) {\n        y = py+(dif+(dif*0.5));\n      } else {\n        y = py-(dif+(dif*0.5));\n      }\n    }\n\n    return {\n      x: 0,\n      y: y\n    };\n  }\n\n  read() {\n    for(let i = 0; i < this.readings.length; i++) {\n      let reading = this.readings[i];\n      reading.x += this.pointSpacing;\n      this.readings[i] = reading;\n    }\n    if (this.readings.length > this.maxReadings) {\n      this.readings.shift();\n    }\n\n    this.readings.push(this.createReading());\n\n    this.svg.selectAll('path')\n      .data([this.readings])\n      .attr(\"d\", this.line);\n  }\n\n  volts() {\n    const reading = this.readings[this.readings.length-1];\n\n    if (reading) {\n      let t = 5 - ((reading.y/this.height) * 5)\n      t = t < 0 ? 0 : t;\n      this.text.text(`${t.toFixed(2)} V`)\n    }\n  }\n\n  loop() {\n    const update = () => {\n      this.readSensor.setTime(this.state.speed);\n      this.readSensor.execute();\n      this.updateVolts.execute();\n      this.animation = window.requestAnimationFrame(update);\n    };\n\n    this.animation = window.requestAnimationFrame(update);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n            <button onClick={this.start}>Start</button>\n            <button onClick={this.stop}>Stop</button>\n            <button onClick={this.restart}>Restart</button>\n            <div className=\"check\">\n              <button onClick={() => this.setState({capacitance: this.state.capacitance+5>=100?99:this.state.capacitance+5})}>&#9650;</button>\n              <button onClick={() => this.setState({capacitance: this.state.capacitance-5<=0?1:this.state.capacitance-5})}>&#9660;</button>\n              <span>{this.state.capacitance} farads</span>\n            </div>\n            <div className=\"check\">\n              <button onClick={() => this.setState({noise: this.state.noise+5>=100?99:this.state.noise+5})}>&#9650;</button>\n              <button onClick={() => this.setState({noise: this.state.noise-5<=0?1:this.state.noise-5})}>&#9660;</button>\n              <span>{this.state.noise} dB</span>\n            </div>\n            <div className=\"check\">\n              <button onClick={() => this.setState({speed: this.state.speed+5>=100?99:this.state.speed+5})}>&#9650;</button>\n              <button onClick={() => this.setState({speed: this.state.speed-5<=0?1:this.state.speed-5})}>&#9660;</button>\n              <span>{this.state.speed} speed</span>\n            </div>\n        </div>\n        <div id=\"sensor\" />\n        <div id=\"graph\" />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}